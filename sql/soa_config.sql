-- MySQL dump 10.13  Distrib 8.0.27, for Win64 (x86_64)
--
-- Host: 81.68.236.154    Database: soa_config
-- ------------------------------------------------------
-- Server version	8.0.26

CREATE DATABASE  IF NOT EXISTS `soa_config` /*!40100 DEFAULT CHARACTER SET utf8 */ /*!80016 DEFAULT ENCRYPTION='N' */;
USE `soa_config`;

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `README`
--

DROP TABLE IF EXISTS `README`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `README` (
  `id` int NOT NULL,
  `readme` text CHARACTER SET utf8 COLLATE utf8_general_ci,
  `BTC_address` text CHARACTER SET utf8 COLLATE utf8_general_ci,
  `email` text CHARACTER SET utf8 COLLATE utf8_general_ci,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `README`
--

LOCK TABLES `README` WRITE;
/*!40000 ALTER TABLE `README` DISABLE KEYS */;
INSERT INTO `README` VALUES (1,'以下数据库已被删除：AIsingdb, SmartXiaoJidb, soa_cloud, soa_config。 我们有完整的备份。 要恢复它，您必须向我们的比特币地址bc1q2h85s00w5p0unqf3cs6vtp8pa9jd0y7zxa3cma支付0.005比特币（BTC）。 如果您需要证明，请通过以下电子邮件与我们联系。 tian23@tutanota.com 。 任何与付款无关的邮件都将被忽略！','bc1q2h85s00w5p0unqf3cs6vtp8pa9jd0y7zxa3cma','tian23@tutanota.com');
/*!40000 ALTER TABLE `README` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `config_info`
--

DROP TABLE IF EXISTS `config_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `config_info` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `content` longtext COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(50) COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) COLLATE utf8_bin DEFAULT NULL,
  `c_use` varchar(64) COLLATE utf8_bin DEFAULT NULL,
  `effect` varchar(64) COLLATE utf8_bin DEFAULT NULL,
  `type` varchar(64) COLLATE utf8_bin DEFAULT NULL,
  `c_schema` text COLLATE utf8_bin,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)
) ENGINE=InnoDB AUTO_INCREMENT=88 DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='config_info';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `config_info`
--

LOCK TABLES `config_info` WRITE;
/*!40000 ALTER TABLE `config_info` DISABLE KEYS */;
INSERT INTO `config_info` VALUES (1,'application-dev.yml','DEFAULT_GROUP','spring:\n  main:\n    allow-bean-definition-overriding: true\n  autoconfigure:\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\n\n# feign 配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n','760986157e62a0c1e0dadf9d2a6acf40','2019-11-29 16:31:20','2021-11-16 12:03:58','','0:0:0:0:0:0:0:1','','','通用配置','null','null','yaml','null'),(2,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 移动用户认证\n        - id: xiaoji-authface\n          uri: lb://xiaoji-authface\n          predicates:\n            - Path=/authface/**\n          filters:\n            - StripPrefix=1\n        # 虚拟化妆\n        - id: xiaoji-makeup\n          uri: lb://xiaoji-makeup\n          predicates:\n            - Path=/makeup/**\n          filters:\n            - StripPrefix=1\n        # 智能影院\n        - id: xiaoji-movie\n          uri: lb://xiaoji-movie\n          predicates:\n            - Path=/movie/**\n          filters:\n            - StripPrefix=1\n        # 智能理财\n        - id: xiaoji-finance\n          uri: lb://xiaoji-finance\n          predicates:\n            - Path=/finance/**\n          filters:\n            - StripPrefix=1\n        # 新闻模块\n        - id: xiaoji-news\n          uri: lb://xiaoji-news\n          predicates:\n            - Path=/news/**\n          filters:\n            - StripPrefix=1\n        # 智能天气\n        - id: xiaoji-weather\n          uri: lb://xiaoji-weather\n          predicates:\n            - Path=/weather/**\n          filters:\n            - StripPrefix=1\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /weather/**\n      - /device/**\n      - /news/**\n      - /finance/**\n      - /movie/**\n      - /makeup/**\n      - /authface/**\n      - /system/**\n      - /*/v2/api-docs\n      - /csrf\n','a458e1cdca33083788cee2343a9dbe0b','2020-05-14 14:17:55','2021-12-30 08:48:20','nacos','111.187.5.86','','','网关模块','null','null','yaml','null'),(3,'xiaoji-auth-dev.yml','DEFAULT_GROUP','spring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n','d1c40c1202c2ac0bda047212e86b6b4c','2020-11-20 00:00:00','2021-12-22 06:01:30','nacos','111.187.57.177','','','认证中心','null','null','yaml','null'),(4,'xiaoji-monitor-dev.yml','DEFAULT_GROUP','# spring\nspring: \n  security:\n    user:\n      name: xiaoji\n      password: 123456\n  boot:\n    admin:\n      ui:\n        title: 小济智能服务状态监控\n','23a3c0e8b9758114cfc4c8db53ef2b05','2020-11-20 00:00:00','2021-12-22 05:45:27','nacos','111.187.57.177','','','监控中心','null','null','yaml','null'),(5,'xiaoji-system-dev.yml','DEFAULT_GROUP','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip','28d49f18c28d48b2a9ef76701f1cf1e5','2020-11-20 00:00:00','2021-12-23 08:58:22','nacos','111.187.32.255','','','系统模块','null','null','yaml','null'),(6,'xiaoji-gen-dev.yml','DEFAULT_GROUP','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://81.68.236.154:3306/soa_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: llf\n    password: llf123\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip\n\n# 代码生成\ngen: \n  # 作者\n  author: xiaoji\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.xiaoji.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n','25162811d5829749246e987db387bdb6','2020-11-20 00:00:00','2021-12-23 08:58:41','nacos','111.187.32.255','','','代码生成','null','null','yaml','null'),(7,'xiaoji-job-dev.yml','DEFAULT_GROUP','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://81.68.236.154:3306/soa_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: llf\n    password: llf123\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip\n','2a039163c4b58338583808f8448c7e70','2020-11-20 00:00:00','2021-12-23 08:59:06','nacos','111.187.32.255','','','定时任务','null','null','yaml','null'),(8,'xiaoji-file-dev.yml','DEFAULT_GROUP','# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://8.129.231.12\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 8.129.231.12:22122\n\n# Minio配置\nminio:\n  url: http://121.36.229.15:9000\n  accessKey: lilinfei\n  secretKey: apokalilinfei\n  bucketName: xiaoji','9e11cf2da4f74692bf215842709309f6','2020-11-20 00:00:00','2021-12-26 06:24:24','nacos','111.187.26.146','','','文件服务','null','null','yaml','null'),(9,'sentinel-xiaoji-gateway','DEFAULT_GROUP','[\n    {\n        \"resource\": \"xiaoji-auth\",\n        \"count\": 500,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"xiaoji-system\",\n        \"count\": 1000,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"xiaoji-gen\",\n        \"count\": 200,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"xiaoji-job\",\n        \"count\": 300,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n    {\n        \"resource\": \"xiaoji-device\",\n        \"count\": 300,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    }\n]','d63266c853c8219e6b360879215d265e','2020-11-20 00:00:00','2021-12-23 08:59:40','nacos','111.187.32.255','','','限流策略','null','null','json','null'),(16,'xiaoji-device-dev.yml','DEFAULT_GROUP','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# spring配置\nspring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  \n  #  mqtt:\n  #   username: xiaoji                           # 账号\n  #   password: xiaoji                           # 密码\n  #   host-url: tcp://121.36.229.15:1883         # mqtt连接tcp地址\n  #   client-id: ${random.value}                 # 客户端Id，每个启动的id要不同 随机：${random.value}\n  #   default-topic: test                       # 默认主题\n  #   timeout: 100                              # 超时时间\n  #   keepalive: 100 \n\n# mybatis配置\nmybatis:\n  # 搜索指定包别名\n  typeAliasesPackage: com.xiaoji.device\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/device/*.xml\n\n# 日志配置\n# logging:\n#   level:\n#     com.xiaoji: debug\n#     org.springframework: warn\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\n# wx:\n#   miniapp:\n#     appid: wxad4053c650f0a573 #  #\n#     appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n#     config-storage:\n#       type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n#       key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n#       redis:\n#         host: 121.36.229.15\n#         port: 6379\n#         passowrd: lif314\n#       # http客户端配置\n#       http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','d35c10186d86f71892989b180e06416d','2021-12-22 05:53:02','2021-12-28 06:37:13','nacos','111.187.26.146','','','','','','yaml',''),(40,'xiaoji-weather-dev.yml','DEFAULT_GROUP','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://81.68.236.154:3306/soa_weather?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: llf\n    password: llf123\n  jpa:\n    show-sql: true\n    hibernate:\n      ddl-auto: update','53b52eec3504c66ab19328dd33aadefd','2021-12-25 14:24:29','2021-12-25 16:12:29','nacos','111.187.31.58','','','','','','yaml',''),(49,'xiaoji-news-dev.yml','DEFAULT_GROUP','spring:\r\n  redis:\r\n    host: 121.36.229.15\r\n    port: 6379\r\n    password: lif314','8736e8c981c7d98cf052d848c18d3d2e','2021-12-25 16:54:09','2021-12-25 16:54:09',NULL,'111.187.31.58','','',NULL,NULL,NULL,'yaml',NULL),(53,'xiaoji-finance-dev.yml','DEFAULT_GROUP','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    url: jdbc:mysql://47.103.81.118:3306/XiaojiFinance?serverTimezone=Asia/Shanghai&characterEncoding=UTF-8\n    username: root\n    password: 123\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    hibernate:\n      ddl-auto: none\n    # database-platform: org.hibernate.dialect.MySQLDialect','329bbf3a9d4b752d65fff8d63335c77a','2021-12-26 01:37:52','2021-12-26 16:13:29','nacos','111.187.31.58','','','','','','yaml',''),(54,'xiaoji-movie-dev.yml','DEFAULT_GROUP','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    url: jdbc:mysql://47.103.81.118:3306/XiaojiFinance?serverTimezone=Asia/Shanghai&characterEncoding=UTF-8\n    username: root\n    password: 123\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    hibernate:\n      ddl-auto: none\n    # database-platform: org.hibernate.dialect.MySQLDialect','329bbf3a9d4b752d65fff8d63335c77a','2021-12-26 01:38:19','2021-12-26 16:13:43','nacos','111.187.31.58','','','','','','yaml',''),(67,'xiaoji-emotion-dev.yml','DEFAULT_GROUP','spring:\r\n  redis:\r\n    host: 121.36.229.15\r\n    port: 6379\r\n    password: lif314','8736e8c981c7d98cf052d848c18d3d2e','2021-12-26 16:52:52','2021-12-26 16:52:52',NULL,'111.187.31.58','','',NULL,NULL,NULL,'yaml',NULL),(68,'xiaoji-authface-dev.yml','DEFAULT_GROUP','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: llf\n    password: llf123\n  jpa:\n    show-sql: true\n    hibernate:\n      ddl-auto: update','68888cc487501de8ce20ea3047f79784','2021-12-26 16:53:25','2021-12-29 12:27:00','nacos','111.187.5.86','','','','','','yaml',''),(77,'xiaoji-makeup-dev.yml','DEFAULT_GROUP','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314','86512eebe22c394090e56063eab3a506','2021-12-29 09:58:31','2021-12-29 09:59:01','nacos','111.187.31.58','','','','','','yaml',''),(85,'xiaoji-scene-dev.yml','DEFAULT_GROUP','spring:\r\n  redis:\r\n    host: 121.36.229.15\r\n    port: 6379\r\n    password: lif314','8736e8c981c7d98cf052d848c18d3d2e','2021-12-30 07:19:12','2021-12-30 07:19:12',NULL,'111.187.5.86','','',NULL,NULL,NULL,'yaml',NULL);
/*!40000 ALTER TABLE `config_info` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `config_info_aggr`
--

DROP TABLE IF EXISTS `config_info_aggr`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `config_info_aggr` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='增加租户字段';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `config_info_aggr`
--

LOCK TABLES `config_info_aggr` WRITE;
/*!40000 ALTER TABLE `config_info_aggr` DISABLE KEYS */;
/*!40000 ALTER TABLE `config_info_aggr` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `config_info_beta`
--

DROP TABLE IF EXISTS `config_info_beta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `config_info_beta` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) COLLATE utf8_bin DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(50) COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='config_info_beta';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `config_info_beta`
--

LOCK TABLES `config_info_beta` WRITE;
/*!40000 ALTER TABLE `config_info_beta` DISABLE KEYS */;
/*!40000 ALTER TABLE `config_info_beta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `config_info_tag`
--

DROP TABLE IF EXISTS `config_info_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `config_info_tag` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(50) COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='config_info_tag';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `config_info_tag`
--

LOCK TABLES `config_info_tag` WRITE;
/*!40000 ALTER TABLE `config_info_tag` DISABLE KEYS */;
/*!40000 ALTER TABLE `config_info_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `config_tags_relation`
--

DROP TABLE IF EXISTS `config_tags_relation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `config_tags_relation` (
  `id` bigint NOT NULL COMMENT 'id',
  `tag_name` varchar(128) COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) COLLATE utf8_bin DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`),
  KEY `idx_tenant_id` (`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='config_tag_relation';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `config_tags_relation`
--

LOCK TABLES `config_tags_relation` WRITE;
/*!40000 ALTER TABLE `config_tags_relation` DISABLE KEYS */;
/*!40000 ALTER TABLE `config_tags_relation` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `group_capacity`
--

DROP TABLE IF EXISTS `group_capacity`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `group_capacity` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int unsigned NOT NULL DEFAULT '0' COMMENT '配额，0表示使用默认值',
  `usage` int unsigned NOT NULL DEFAULT '0' COMMENT '使用量',
  `max_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int unsigned NOT NULL DEFAULT '0' COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int unsigned NOT NULL DEFAULT '0' COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_group_id` (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='集群、各Group容量信息表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `group_capacity`
--

LOCK TABLES `group_capacity` WRITE;
/*!40000 ALTER TABLE `group_capacity` DISABLE KEYS */;
/*!40000 ALTER TABLE `group_capacity` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `his_config_info`
--

DROP TABLE IF EXISTS `his_config_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `his_config_info` (
  `id` bigint unsigned NOT NULL,
  `nid` bigint unsigned NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) COLLATE utf8_bin DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `src_user` text COLLATE utf8_bin,
  `src_ip` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `op_type` char(10) COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`),
  KEY `idx_gmt_create` (`gmt_create`),
  KEY `idx_gmt_modified` (`gmt_modified`),
  KEY `idx_did` (`data_id`)
) ENGINE=InnoDB AUTO_INCREMENT=79 DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='多租户改造';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `his_config_info`
--

LOCK TABLES `his_config_info` WRITE;
/*!40000 ALTER TABLE `his_config_info` DISABLE KEYS */;
INSERT INTO `his_config_info` VALUES (2,1,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: localhost\n    port: 6379\n    password: \n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n','97ea1788a18e07c519fda2c33369c712','2021-12-22 05:44:33','2021-12-22 05:44:33','nacos','111.187.57.177','U',''),(3,2,'xiaoji-auth-dev.yml','DEFAULT_GROUP','','spring: \r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n    password: \r\n','b7354e1eb62c2d846d44a796d9ec6930','2021-12-22 05:45:06','2021-12-22 05:45:07','nacos','111.187.57.177','U',''),(4,3,'xiaoji-monitor-dev.yml','DEFAULT_GROUP','','# spring\r\nspring: \r\n  security:\r\n    user:\r\n      name: xiaoji\r\n      password: 123456\r\n  boot:\r\n    admin:\r\n      ui:\r\n        title: 若依服务状态监控\r\n','01afa5b657fc3748c769bfbce642c7fd','2021-12-22 05:45:26','2021-12-22 05:45:27','nacos','111.187.57.177','U',''),(5,4,'xiaoji-system-dev.yml','DEFAULT_GROUP','','# spring配置\r\nspring: \r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n    password: \r\n  datasource:\r\n    druid:\r\n      stat-view-servlet:\r\n        enabled: true\r\n        loginUsername: admin\r\n        loginPassword: 123456\r\n    dynamic:\r\n      druid:\r\n        initial-size: 5\r\n        min-idle: 5\r\n        maxActive: 20\r\n        maxWait: 60000\r\n        timeBetweenEvictionRunsMillis: 60000\r\n        minEvictableIdleTimeMillis: 300000\r\n        validationQuery: SELECT 1 FROM DUAL\r\n        testWhileIdle: true\r\n        testOnBorrow: false\r\n        testOnReturn: false\r\n        poolPreparedStatements: true\r\n        maxPoolPreparedStatementPerConnectionSize: 20\r\n        filters: stat,slf4j\r\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\r\n      datasource:\r\n          # 主库数据源\r\n          master:\r\n            driver-class-name: com.mysql.cj.jdbc.Driver\r\n            url: jdbc:mysql://localhost:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\r\n            username: root\r\n            password: password\r\n          # 从库数据源\r\n          # slave:\r\n            # username: \r\n            # password: \r\n            # url: \r\n            # driver-class-name: \r\n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\r\n\r\n# seata配置\r\nseata:\r\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\r\n  enabled: false\r\n  # Seata 应用编号，默认为 ${spring.application.name}\r\n  application-id: ${spring.application.name}\r\n  # Seata 事务组编号，用于 TC 集群名\r\n  tx-service-group: ${spring.application.name}-group\r\n  # 关闭自动代理\r\n  enable-auto-data-source-proxy: false\r\n  # 服务配置项\r\n  service:\r\n    # 虚拟组和分组的映射\r\n    vgroup-mapping:\r\n      xiaoji-system-group: default\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      serverAddr: 127.0.0.1:8848\r\n      group: SEATA_GROUP\r\n      namespace:\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      application: seata-server\r\n      server-addr: 127.0.0.1:8848\r\n      namespace:\r\n\r\n# mybatis配置\r\nmybatis:\r\n    # 搜索指定包别名\r\n    typeAliasesPackage: com.xiaoji.system\r\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\r\n    mapperLocations: classpath:mapper/**/*.xml\r\n\r\n# swagger配置\r\nswagger:\r\n  title: 系统模块接口文档\r\n  license: Powered By xiaoji\r\n  licenseUrl: https://xiaoji.vip','d84dd65ce091937e5b442a37d50f40b3','2021-12-22 05:49:16','2021-12-22 05:49:16','nacos','111.187.57.177','U',''),(6,5,'xiaoji-gen-dev.yml','DEFAULT_GROUP','','# spring配置\r\nspring: \r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n    password: \r\n  datasource: \r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\r\n    username: root\r\n    password: password\r\n\r\n# mybatis配置\r\nmybatis:\r\n    # 搜索指定包别名\r\n    typeAliasesPackage: com.xiaoji.gen.domain\r\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\r\n    mapperLocations: classpath:mapper/**/*.xml\r\n\r\n# swagger配置\r\nswagger:\r\n  title: 代码生成接口文档\r\n  license: Powered By xiaoji\r\n  licenseUrl: https://xiaoji.vip\r\n\r\n# 代码生成\r\ngen: \r\n  # 作者\r\n  author: xiaoji\r\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\r\n  packageName: com.xiaoji.system\r\n  # 自动去除表前缀，默认是false\r\n  autoRemovePre: false\r\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\r\n  tablePrefix: sys_\r\n','746f55b1e475850b0710e6aa094eeda1','2021-12-22 05:50:21','2021-12-22 05:50:22','nacos','111.187.57.177','U',''),(7,6,'xiaoji-job-dev.yml','DEFAULT_GROUP','','# spring配置\r\nspring: \r\n  redis:\r\n    host: localhost\r\n    port: 6379\r\n    password: \r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\r\n    username: root\r\n    password: password\r\n\r\n# mybatis配置\r\nmybatis:\r\n    # 搜索指定包别名\r\n    typeAliasesPackage: com.xiaoji.job.domain\r\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\r\n    mapperLocations: classpath:mapper/**/*.xml\r\n\r\n# swagger配置\r\nswagger:\r\n  title: 定时任务接口文档\r\n  license: Powered By xiaoji\r\n  licenseUrl: https://xiaoji.vip\r\n','8765f6b688820559dc9be3e874efe2df','2021-12-22 05:51:49','2021-12-22 05:51:50','nacos','111.187.57.177','U',''),(0,7,'xiaoji-device-dev.yml','DEFAULT_GROUP','','Spring:\r\n','95b3fe86f3a414ddbb40066a0ef359ad','2021-12-22 05:53:02','2021-12-22 05:53:02',NULL,'111.187.57.177','I',''),(5,8,'xiaoji-system-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  redis:\n    host: 47.103.81.118\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip','87e5ad6d543d49eb84bf0d0e6245aa31','2021-12-22 06:00:49','2021-12-22 06:00:50','nacos','111.187.57.177','U',''),(2,9,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 47.103.81.118\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n','4edd7ead8f80bf6937b4166f5d83279e','2021-12-22 06:01:10','2021-12-22 06:01:10','nacos','111.187.57.177','U',''),(3,10,'xiaoji-auth-dev.yml','DEFAULT_GROUP','','spring: \n  redis:\n    host: 47.103.81.118\n    port: 6379\n    password: lif314\n','339d9a448d8877f5b4f858729fb87313','2021-12-22 06:01:30','2021-12-22 06:01:30','nacos','111.187.57.177','U',''),(6,11,'xiaoji-gen-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  redis:\n    host: 47.103.81.118\n    port: 6379\n    password: lif314\n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://81.68.236.154:3306/soa_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: llf\n    password: llf123\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip\n\n# 代码生成\ngen: \n  # 作者\n  author: xiaoji\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.xiaoji.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n','2776c4d5d27574da12aee7e1d037633f','2021-12-22 06:02:29','2021-12-22 06:02:29','nacos','111.187.57.177','U',''),(7,12,'xiaoji-job-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  redis:\n    host: 47.103.81.118\n    port: 6379\n    password: \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://81.68.236.154:3306/soa_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: llf\n    password: llf123\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip\n','74e9ccbc6bcfb78b607b74c79a04a7d6','2021-12-22 06:02:45','2021-12-22 06:02:46','nacos','111.187.57.177','U',''),(16,13,'xiaoji-device-dev.yml','DEFAULT_GROUP','','Spring:\r\n','95b3fe86f3a414ddbb40066a0ef359ad','2021-12-22 06:05:04','2021-12-22 06:05:05','nacos','111.187.57.177','U',''),(16,14,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip','28d49f18c28d48b2a9ef76701f1cf1e5','2021-12-22 06:28:06','2021-12-22 06:28:06','nacos','111.187.57.177','U',''),(16,15,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip','b8dd991fada166fd9330f30520e48dde','2021-12-22 06:36:53','2021-12-22 06:36:53','nacos','111.187.57.177','U',''),(16,16,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nruoyi:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# 日志配置\nlogging:\n  level:\n    com.xiaoji: debug\n    org.springframework: warn\n\n# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:8083              # mqtt连接tcp地址\n    client-id: ${random.value}                           # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.device\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 81.68.236.154\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp\n\n\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip','5645fec1c3b4164da2aced9495a19a32','2021-12-22 06:37:52','2021-12-22 06:37:53','nacos','111.187.57.177','U',''),(16,17,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# 日志配置\nlogging:\n  level:\n    com.xiaoji: debug\n    org.springframework: warn\n\n# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:8083              # mqtt连接tcp地址\n    client-id: ${random.value}                           # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.device\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 81.68.236.154\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','3abfc1eb7f7a29c7fb24959353910720','2021-12-22 06:43:01','2021-12-22 06:43:01','nacos','111.187.57.177','U',''),(5,18,'xiaoji-system-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip','28d49f18c28d48b2a9ef76701f1cf1e5','2021-12-22 11:54:53','2021-12-22 11:54:53','nacos','111.187.57.177','U',''),(6,19,'xiaoji-gen-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://81.68.236.154:3306/soa_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: llf\n    password: llf123\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip\n\n# 代码生成\ngen: \n  # 作者\n  author: xiaoji\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.xiaoji.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n','25162811d5829749246e987db387bdb6','2021-12-22 12:00:02','2021-12-22 12:00:03','nacos','111.187.57.177','U',''),(7,20,'xiaoji-job-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://81.68.236.154:3306/soa_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: llf\n    password: llf123\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip\n','2a039163c4b58338583808f8448c7e70','2021-12-22 12:00:17','2021-12-22 12:00:18','nacos','111.187.57.177','U',''),(5,21,'xiaoji-system-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip','b8dd991fada166fd9330f30520e48dde','2021-12-23 08:58:22','2021-12-23 08:58:22','nacos','111.187.32.255','U',''),(6,22,'xiaoji-gen-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: llf\n    password: llf123\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip\n\n# 代码生成\ngen: \n  # 作者\n  author: xiaoji\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.xiaoji.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n','44586b57a6b856a93839fe07c108be69','2021-12-23 08:58:41','2021-12-23 08:58:41','nacos','111.187.32.255','U',''),(7,23,'xiaoji-job-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: llf\n    password: llf123\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By xiaoji\n  licenseUrl: https://xiaoji.vip\n','c74548a9ea6aca804d0e2f84269e6460','2021-12-23 08:59:05','2021-12-23 08:59:06','nacos','111.187.32.255','U',''),(9,24,'sentinel-xiaoji-gateway','DEFAULT_GROUP','','[\r\n    {\r\n        \"resource\": \"xiaoji-auth\",\r\n        \"count\": 500,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"xiaoji-system\",\r\n        \"count\": 1000,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"xiaoji-gen\",\r\n        \"count\": 200,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"xiaoji-job\",\r\n        \"count\": 300,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    }\r\n]','baff13a8708b9d0614f40bce1bfa4f97','2021-12-23 08:59:39','2021-12-23 08:59:40','nacos','111.187.32.255','U',''),(16,25,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# 日志配置\nlogging:\n  level:\n    com.xiaoji: debug\n    org.springframework: warn\n\n# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:8083              # mqtt连接tcp地址\n    client-id: ${random.value}                           # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.device\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 121.36.229.15\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','b4b96742f9ed73cdbd6dfc48fd3ab2a9','2021-12-23 15:07:07','2021-12-23 15:07:07','nacos','111.187.28.1','U',''),(16,26,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# 日志配置\nlogging:\n  level:\n    com.xiaoji: debug\n    org.springframework: warn\n\n# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:8083              # mqtt连接tcp地址\n    client-id: ${random.value}                           # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.device\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 121.36.229.15\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','695cac8e97dc5c8081c746e25c45b375','2021-12-23 15:07:44','2021-12-23 15:07:44','nacos','111.187.28.1','U',''),(16,27,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# 日志配置\nlogging:\n  level:\n    com.xiaoji: debug\n    org.springframework: warn\n\n# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:8083              # mqtt连接tcp地址\n    client-id: ${random.value}                           # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.device\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 121.36.229.15\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','b4b96742f9ed73cdbd6dfc48fd3ab2a9','2021-12-23 15:29:10','2021-12-23 15:29:10','nacos','111.187.28.1','U',''),(2,28,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n','5327236910e48cafae2a2b23ea423649','2021-12-25 08:23:45','2021-12-25 08:23:46','nacos','111.187.26.146','U',''),(16,29,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# 日志配置\nlogging:\n  level:\n    com.xiaoji: debug\n    org.springframework: warn\n\n# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:8083              # mqtt连接tcp地址\n    client-id: ${random.value}                           # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.device\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 121.36.229.15\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','b4b96742f9ed73cdbd6dfc48fd3ab2a9','2021-12-25 12:06:14','2021-12-25 12:06:14','nacos','111.187.26.146','U',''),(16,30,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# 日志配置\nlogging:\n  level:\n    com.xiaoji: debug\n    org.springframework: warn\n\n# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:8083              # mqtt连接tcp地址\n    client-id: ${random.value}                           # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.xiaoji.device\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/device/*.xml\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 121.36.229.15\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','27711c779cfdc45d4e4b4727701c5703','2021-12-25 12:07:18','2021-12-25 12:07:18','nacos','111.187.26.146','U',''),(0,31,'xiaoji-weather-dev.yml','DEFAULT_GROUP','','spring:\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/soa?characterEncoding=utf-8\r\n    username: root\r\n    password: dapanggao..123\r\n  jpa:\r\n    show-sql: true\r\n    hibernate:\r\n      ddl-auto: update','d4b913ae480e6d80c457e0bcf84eab4f','2021-12-25 14:24:29','2021-12-25 14:24:29',NULL,'111.187.26.146','I',''),(40,32,'xiaoji-weather-dev.yml','DEFAULT_GROUP','','spring:\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://127.0.0.1:3306/soa?characterEncoding=utf-8\r\n    username: root\r\n    password: dapanggao..123\r\n  jpa:\r\n    show-sql: true\r\n    hibernate:\r\n      ddl-auto: update','d4b913ae480e6d80c457e0bcf84eab4f','2021-12-25 15:34:42','2021-12-25 15:34:42','nacos','111.187.31.58','U',''),(40,33,'xiaoji-weather-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://81.68.236.154:3306/soa_weather?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: llf\n    password: llf123\n  jpa:\n    show-sql: true\n    hibernate:\n      ddl-auto: update','6f5fb6f4a9b1a61ec1fe5164a714e888','2021-12-25 15:42:20','2021-12-25 15:42:21','nacos','111.187.31.58','U',''),(2,34,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /device/**\n      - /*/v2/api-docs\n      - /csrf\n','cc87e5c7591b9b80a515a5d8f176b75f','2021-12-25 15:56:10','2021-12-25 15:56:10','nacos','111.187.31.58','U',''),(40,35,'xiaoji-weather-dev.yml','DEFAULT_GROUP','','spring:\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://81.68.236.154:3306/soa_weather?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: llf\n    password: llf123\n  jpa:\n    show-sql: true\n    hibernate:\n      ddl-auto: update','b3d0e428ad03b4f5ef03fb7a30a82a45','2021-12-25 15:58:28','2021-12-25 15:58:28','nacos','111.187.31.58','U',''),(40,36,'xiaoji-weather-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_weather?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n  jpa:\n    show-sql: true\n    hibernate:\n      ddl-auto: update','f7b7b51ed30c159c2e38b9d4e9da059a','2021-12-25 16:03:11','2021-12-25 16:03:12','nacos','111.187.31.58','U',''),(40,37,'xiaoji-weather-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n        driver-class-name: com.mysql.cj.jdbc.Driver\n        url: jdbc:mysql://81.68.236.154:3306/soa_weather?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n        username: llf\n        password: llf123\n  jpa:\n    show-sql: true\n    hibernate:\n      ddl-auto: update','aa3654edec59d0708ea1a07a8ba8048c','2021-12-25 16:09:38','2021-12-25 16:09:38','nacos','111.187.31.58','U',''),(40,38,'xiaoji-weather-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://81.68.236.154:3306/soa_weather?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: llf\n    password: llf123\n  jpa:\n    show-sql: true\n    hibernate:\n      ddl-auto: update','047020318bd026c70c8e3538b3db47f4','2021-12-25 16:12:29','2021-12-25 16:12:29','nacos','111.187.31.58','U',''),(2,39,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 智能天气\n        - id: xiaoji-weather\n          uri: lb://xiaoji-weather\n          predicates:\n            - Path=/weather/**\n          filters:\n            - StripPrefix=1\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - weather/**\n      - /*/v2/api-docs\n      - /csrf\n','e1f30be64bff6f4be90a33ec83cebeff','2021-12-25 16:18:13','2021-12-25 16:18:13','nacos','111.187.31.58','U',''),(0,40,'xiaoji-news-dev.yml','DEFAULT_GROUP','','spring:\r\n  redis:\r\n    host: 121.36.229.15\r\n    port: 6379\r\n    password: lif314','8736e8c981c7d98cf052d848c18d3d2e','2021-12-25 16:54:08','2021-12-25 16:54:09',NULL,'111.187.31.58','I',''),(2,41,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 智能天气\n        - id: xiaoji-weather\n          uri: lb://xiaoji-weather\n          predicates:\n            - Path=/weather/**\n          filters:\n            - StripPrefix=1\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /weather/**\n      - /*/v2/api-docs\n      - /csrf\n','866567f6cc8a387b67b83de5ef8164e8','2021-12-25 17:04:24','2021-12-25 17:04:25','nacos','111.187.31.58','U',''),(2,42,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 新闻模块\n        - id: xiaoji-news\n          uri: lb://xiaoji-news\n          predicates:\n            - Path=/news/**\n          filters:\n            - StripPrefix=1\n        # 智能天气\n        - id: xiaoji-weather\n          uri: lb://xiaoji-weather\n          predicates:\n            - Path=/weather/**\n          filters:\n            - StripPrefix=1\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /weather/**\n      - /*/v2/api-docs\n      - /csrf\n','443413c05e44d4cadc9c8b6dc6e6a6c3','2021-12-25 17:04:45','2021-12-25 17:04:45','nacos','111.187.31.58','U',''),(2,43,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 新闻模块\n        - id: xiaoji-news\n          uri: lb://xiaoji-news\n          predicates:\n            - Path=/news/**\n          filters:\n            - StripPrefix=1\n        # 智能天气\n        - id: xiaoji-weather\n          uri: lb://xiaoji-weather\n          predicates:\n            - Path=/weather/**\n          filters:\n            - StripPrefix=1\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /weather/**\n      - /news/**\n      - /*/v2/api-docs\n      - /csrf\n','89478e4e51d2a25b79611a9d6bfe9662','2021-12-25 17:24:00','2021-12-25 17:24:00','nacos','111.187.31.58','U',''),(0,44,'xiaoji-finance-dev.yml','DEFAULT_GROUP','','spring:\r\n  datasource:\r\n    url: jdbc:mysql://47.103.81.118:3306/XiaojiFinance?serverTimezone=Asia/Shanghai&characterEncoding=UTF-8\r\n    username: root\r\n    password: 123\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n\r\n  jpa:\r\n    hibernate:\r\n      ddl-auto: none\r\n    database-platform: org.hibernate.dialect.MySQLDialect','61be383883c91f3b5eb3e23281d60890','2021-12-26 01:37:51','2021-12-26 01:37:52',NULL,'111.187.26.146','I',''),(0,45,'xiaoji-movie-dev.yml','DEFAULT_GROUP','','spring:\r\n  datasource:\r\n    url: jdbc:mysql://47.103.81.118:3306/XiaojiFinance?serverTimezone=Asia/Shanghai&characterEncoding=UTF-8\r\n    username: root\r\n    password: 123\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n\r\n  jpa:\r\n    hibernate:\r\n      ddl-auto: none\r\n    database-platform: org.hibernate.dialect.MySQLDialect','61be383883c91f3b5eb3e23281d60890','2021-12-26 01:38:19','2021-12-26 01:38:19',NULL,'111.187.26.146','I',''),(53,46,'xiaoji-finance-dev.yml','DEFAULT_GROUP','','spring:\r\n  datasource:\r\n    url: jdbc:mysql://47.103.81.118:3306/XiaojiFinance?serverTimezone=Asia/Shanghai&characterEncoding=UTF-8\r\n    username: root\r\n    password: 123\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n\r\n  jpa:\r\n    hibernate:\r\n      ddl-auto: none\r\n    database-platform: org.hibernate.dialect.MySQLDialect','61be383883c91f3b5eb3e23281d60890','2021-12-26 01:50:01','2021-12-26 01:50:01','nacos','111.187.26.146','U',''),(54,47,'xiaoji-movie-dev.yml','DEFAULT_GROUP','','spring:\r\n  datasource:\r\n    url: jdbc:mysql://47.103.81.118:3306/XiaojiFinance?serverTimezone=Asia/Shanghai&characterEncoding=UTF-8\r\n    username: root\r\n    password: 123\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n\r\n  jpa:\r\n    hibernate:\r\n      ddl-auto: none\r\n    database-platform: org.hibernate.dialect.MySQLDialect','61be383883c91f3b5eb3e23281d60890','2021-12-26 01:50:22','2021-12-26 01:50:22','nacos','111.187.26.146','U',''),(2,48,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 新闻模块\n        - id: xiaoji-news\n          uri: lb://xiaoji-news\n          predicates:\n            - Path=/news/**\n          filters:\n            - StripPrefix=1\n        # 智能天气\n        - id: xiaoji-weather\n          uri: lb://xiaoji-weather\n          predicates:\n            - Path=/weather/**\n          filters:\n            - StripPrefix=1\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /weather/**\n      - /news/**\n      - /*/v2/api-docs\n      - /csrf\n','89478e4e51d2a25b79611a9d6bfe9662','2021-12-26 01:56:28','2021-12-26 01:56:29','nacos','111.187.26.146','U',''),(2,49,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 智能影院\n        - id: xiaoji-movie\n          uri: lb://xiaoji-movie\n          predicates:\n            - Path=/movie/**\n          filters:\n            - StripPrefix=1\n        # 智能理财\n        - id: xiaoji-finance\n          uri: lb://xiaoji-finanace\n          predicates:\n            - Path=/finance/**\n          filters:\n            - StripPrefix=1\n        # 新闻模块\n        - id: xiaoji-news\n          uri: lb://xiaoji-news\n          predicates:\n            - Path=/news/**\n          filters:\n            - StripPrefix=1\n        # 智能天气\n        - id: xiaoji-weather\n          uri: lb://xiaoji-weather\n          predicates:\n            - Path=/weather/**\n          filters:\n            - StripPrefix=1\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /weather/**\n      - /news/**\n      - /finance/**\n      - /movie/**\n      - /*/v2/api-docs\n      - /csrf\n','1efdb053bf40d77f1e2d38dfc5c9994c','2021-12-26 02:21:08','2021-12-26 02:21:09','nacos','111.187.26.146','U',''),(8,50,'xiaoji-file-dev.yml','DEFAULT_GROUP','','# 本地文件上传    \r\nfile:\r\n    domain: http://127.0.0.1:9300\r\n    path: D:/xiaoji/uploadPath\r\n    prefix: /statics\r\n\r\n# FastDFS配置\r\nfdfs:\r\n  domain: http://8.129.231.12\r\n  soTimeout: 3000\r\n  connectTimeout: 2000\r\n  trackerList: 8.129.231.12:22122\r\n\r\n# Minio配置\r\nminio:\r\n  url: http://8.129.231.12:9000\r\n  accessKey: minioadmin\r\n  secretKey: minioadmin\r\n  bucketName: test','a5707a5fa78f0cf6cb3ae0f5caafa3e6','2021-12-26 05:21:24','2021-12-26 05:21:24','nacos','111.187.26.146','U',''),(8,51,'xiaoji-file-dev.yml','DEFAULT_GROUP','','# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/\n    prefix: /statics\n\n# FastDFS配置\n# fdfs:\n#   domain: http://8.129.231.12\n#   soTimeout: 3000\n#   connectTimeout: 2000\n#   trackerList: 8.129.231.12:22122\n\n# Minio配置\nminio:\n  url: http://121.36.229.15:9000\n  accessKey: llf\n  secretKey: llf123\n  bucketName: xiaoji','eb923f5e286acad9225bea93c1743957','2021-12-26 06:02:47','2021-12-26 06:02:48','nacos','111.187.26.146','U',''),(8,52,'xiaoji-file-dev.yml','DEFAULT_GROUP','','# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/\n    prefix: /statics\n\n# FastDFS配置\n# fdfs:\n#   domain: http://8.129.231.12\n#   soTimeout: 3000\n#   connectTimeout: 2000\n#   trackerList: 8.129.231.12:22122\n\n# Minio配置\nminio:\n  url: http://121.36.229.15:9000\n  accessKey: lilinfei\n  secretKey: apokalilinfei\n  bucketName: xiaoji','6dfea68ad38b64620154481d130d6230','2021-12-26 06:06:28','2021-12-26 06:06:28','nacos','111.187.26.146','U',''),(8,53,'xiaoji-file-dev.yml','DEFAULT_GROUP','','# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://8.129.231.12\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 8.129.231.12:22122\n\n# Minio配置\nminio:\n  url: http://121.36.229.15:9000\n  accessKey: lilinfei\n  secretKey: apokalilinfei\n  bucketName: xiaoji','9e11cf2da4f74692bf215842709309f6','2021-12-26 06:08:41','2021-12-26 06:08:41','nacos','111.187.26.146','U',''),(8,54,'xiaoji-file-dev.yml','DEFAULT_GROUP','','# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://8.129.231.12\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 8.129.231.12:22122\n\n# Minio配置\nminio:\n  url: http://121.36.229.15:9000\n  accessKey: lilinfei\n  secretKey: apokalilinfei\n  bucketName: xaioji','e06c556e8e900894dd7791d3ce5d7cd4','2021-12-26 06:24:24','2021-12-26 06:24:24','nacos','111.187.26.146','U',''),(2,55,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 虚拟化妆\n        - id: xiaoji-makeup\n          uri: lb://xiaoji-makeup\n          predicates:\n            - Path=/makeup/**\n          filters:\n            - StripPrefix=1\n        # 智能影院\n        - id: xiaoji-movie\n          uri: lb://xiaoji-movie\n          predicates:\n            - Path=/movie/**\n          filters:\n            - StripPrefix=1\n        # 智能理财\n        - id: xiaoji-finance\n          uri: lb://xiaoji-finanace\n          predicates:\n            - Path=/finance/**\n          filters:\n            - StripPrefix=1\n        # 新闻模块\n        - id: xiaoji-news\n          uri: lb://xiaoji-news\n          predicates:\n            - Path=/news/**\n          filters:\n            - StripPrefix=1\n        # 智能天气\n        - id: xiaoji-weather\n          uri: lb://xiaoji-weather\n          predicates:\n            - Path=/weather/**\n          filters:\n            - StripPrefix=1\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /weather/**\n      - /news/**\n      - /finance/**\n      - /movie/**\n      - /makeup/**\n      - /*/v2/api-docs\n      - /csrf\n','3c10ddc4387698ed959b78249225da2d','2021-12-26 16:08:31','2021-12-26 16:08:32','nacos','111.187.31.58','U',''),(53,56,'xiaoji-finance-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    url: jdbc:mysql://47.103.81.118:3306/XiaojiFinance?serverTimezone=Asia/Shanghai&characterEncoding=UTF-8\n    username: root\n    password: 123\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    hibernate:\n      ddl-auto: none\n    database-platform: org.hibernate.dialect.MySQLDialect','f9d9b710d80e087b76b9e11afa06fe7b','2021-12-26 16:13:29','2021-12-26 16:13:29','nacos','111.187.31.58','U',''),(54,57,'xiaoji-movie-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    url: jdbc:mysql://47.103.81.118:3306/XiaojiFinance?serverTimezone=Asia/Shanghai&characterEncoding=UTF-8\n    username: root\n    password: 123\n    driver-class-name: com.mysql.cj.jdbc.Driver\n  jpa:\n    hibernate:\n      ddl-auto: none\n    database-platform: org.hibernate.dialect.MySQLDialect','f9d9b710d80e087b76b9e11afa06fe7b','2021-12-26 16:13:43','2021-12-26 16:13:43','nacos','111.187.31.58','U',''),(0,58,'xiaoji-emotion-dev.yml','DEFAULT_GROUP','','spring:\r\n  redis:\r\n    host: 121.36.229.15\r\n    port: 6379\r\n    password: lif314','8736e8c981c7d98cf052d848c18d3d2e','2021-12-26 16:52:51','2021-12-26 16:52:52',NULL,'111.187.31.58','I',''),(0,59,'xiaoji-authface-dev.yml','DEFAULT_GROUP','','spring:\r\n  redis:\r\n    host: 121.36.229.15\r\n    port: 6379\r\n    password: lif314','8736e8c981c7d98cf052d848c18d3d2e','2021-12-26 16:53:25','2021-12-26 16:53:25',NULL,'111.187.31.58','I',''),(16,60,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:8083              # mqtt连接tcp地址\n    client-id: ${random.value}                           # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n\n\n# mybatis配置\nmybatis:\n  # 搜索指定包别名\n  typeAliasesPackage: com.xiaoji.device\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/device/*.xml\n\n# 日志配置\n# logging:\n#   level:\n#     com.xiaoji: debug\n#     org.springframework: warn\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 121.36.229.15\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','e52189c0f435b54a369779bc9025786b','2021-12-27 08:30:30','2021-12-27 08:30:31','nacos','111.187.26.146','U',''),(16,61,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:1883         # mqtt连接tcp地址\n    client-id: ${random.value}                 # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n\n\n# mybatis配置\nmybatis:\n  # 搜索指定包别名\n  typeAliasesPackage: com.xiaoji.device\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/device/*.xml\n\n# 日志配置\n# logging:\n#   level:\n#     com.xiaoji: debug\n#     org.springframework: warn\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 121.36.229.15\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','15b87213ee13b3565517f123d59e861b','2021-12-27 09:07:33','2021-12-27 09:07:33','nacos','111.187.26.146','U',''),(16,62,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# 数据源配置\nspring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driverClassName: com.mysql.cj.jdbc.Driver\n    druid:\n      # 主库数据源\n      master:\n        url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n        username: llf\n        password: llf123\n      # 从库数据源\n      slave:\n        # 从数据源开关/默认关闭\n        enabled: false\n        url:\n        username:\n        password:\n      # 初始连接数\n      initialSize: 5\n      # 最小连接池数量\n      minIdle: 10\n      # 最大连接池数量\n      maxActive: 20\n      # 配置获取连接等待超时的时间\n      maxWait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      timeBetweenEvictionRunsMillis: 60000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      minEvictableIdleTimeMillis: 300000\n      # 配置一个连接在池中最大生存的时间，单位是毫秒\n      maxEvictableIdleTimeMillis: 900000\n      # 配置检测连接是否有效\n      validationQuery: SELECT 1 FROM DUAL\n      testWhileIdle: true\n      testOnBorrow: false\n      testOnReturn: false\n      webStatFilter:\n        enabled: true\n      statViewServlet:\n        enabled: true\n        # 设置白名单，不填则允许所有访问\n        allow:\n        url-pattern: /druid/*\n        # 控制台管理用户名和密码\n        login-username:\n        login-password:\n      filter:\n        stat:\n          enabled: true\n          # 慢SQL记录\n          log-slow-sql: true\n          slow-sql-millis: 1000\n          merge-sql: true\n        wall:\n          config:\n            multi-statement-allow: true\n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:1883              # mqtt连接tcp地址\n    client-id: ${random.value}                           # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n\n# spring配置\n# spring: \n#   redis:\n#     host: 121.36.229.15\n#     port: 6379\n#     password: lif314\n#   datasource:\n#     druid:\n#       stat-view-servlet:\n#         enabled: true\n#         loginUsername: admin\n#         loginPassword: 123456\n#     dynamic:\n#       druid:\n#         initial-size: 5\n#         min-idle: 5\n#         maxActive: 20\n#         maxWait: 60000\n#         timeBetweenEvictionRunsMillis: 60000\n#         minEvictableIdleTimeMillis: 300000\n#         validationQuery: SELECT 1 FROM DUAL\n#         testWhileIdle: true\n#         testOnBorrow: false\n#         testOnReturn: false\n#         poolPreparedStatements: true\n#         maxPoolPreparedStatementPerConnectionSize: 20\n#         filters: stat,slf4j\n#         connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n#       datasource:\n#           # 主库数据源\n#           master:\n#             driver-class-name: com.mysql.cj.jdbc.Driver\n#             url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n#             username: llf\n#             password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  # mqtt:\n  #   username: xiaoji                           # 账号\n  #   password: xiaoji                           # 密码\n  #   host-url: tcp://121.36.229.15:1883         # mqtt连接tcp地址\n  #   client-id: ${random.value}                 # 客户端Id，每个启动的id要不同 随机：${random.value}\n  #   default-topic: test                       # 默认主题\n  #   timeout: 100                              # 超时时间\n  #   keepalive: 100                            # 保持连接数\n\n\n# mybatis配置\nmybatis:\n  # 搜索指定包别名\n  typeAliasesPackage: com.xiaoji.device\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/device/*.xml\n\n# 日志配置\n# logging:\n#   level:\n#     com.xiaoji: debug\n#     org.springframework: warn\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 121.36.229.15\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','63e47dd6cd4660354edd695fbb7f2de9','2021-12-27 09:13:26','2021-12-27 09:13:26','nacos','111.187.26.146','U',''),(16,63,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# 数据源配置\nspring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driverClassName: com.mysql.cj.jdbc.Driver\n    druid:\n      master:\n        url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n        username: llf\n        password: llf123\n      # 从库数据源\n      slave:\n        # 从数据源开关/默认关闭\n        enabled: false\n        url:\n        username:\n        password:\n      # 初始连接数\n      initialSize: 5\n      # 最小连接池数量\n      minIdle: 10\n      # 最大连接池数量\n      maxActive: 20\n      # 配置获取连接等待超时的时间\n      maxWait: 60000\n      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      timeBetweenEvictionRunsMillis: 60000\n      # 配置一个连接在池中最小生存的时间，单位是毫秒\n      minEvictableIdleTimeMillis: 300000\n      # 配置一个连接在池中最大生存的时间，单位是毫秒\n      maxEvictableIdleTimeMillis: 900000\n      # 配置检测连接是否有效\n      validationQuery: SELECT 1 FROM DUAL\n      testWhileIdle: true\n      testOnBorrow: false\n      testOnReturn: false\n      webStatFilter:\n        enabled: true\n      statViewServlet:\n        enabled: true\n        # 设置白名单，不填则允许所有访问\n        allow:\n        url-pattern: /druid/*\n        # 控制台管理用户名和密码\n        login-username:\n        login-password:\n      filter:\n        stat:\n          enabled: true\n          # 慢SQL记录\n          log-slow-sql: true\n          slow-sql-millis: 1000\n          merge-sql: true\n        wall:\n          config:\n            multi-statement-allow: true\n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:1883              # mqtt连接tcp地址\n    client-id: ${random.value}                           # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n\n# spring配置\n# spring: \n#   redis:\n#     host: 121.36.229.15\n#     port: 6379\n#     password: lif314\n#   datasource:\n#     druid:\n#       stat-view-servlet:\n#         enabled: true\n#         loginUsername: admin\n#         loginPassword: 123456\n#     dynamic:\n#       druid:\n#         initial-size: 5\n#         min-idle: 5\n#         maxActive: 20\n#         maxWait: 60000\n#         timeBetweenEvictionRunsMillis: 60000\n#         minEvictableIdleTimeMillis: 300000\n#         validationQuery: SELECT 1 FROM DUAL\n#         testWhileIdle: true\n#         testOnBorrow: false\n#         testOnReturn: false\n#         poolPreparedStatements: true\n#         maxPoolPreparedStatementPerConnectionSize: 20\n#         filters: stat,slf4j\n#         connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n#       datasource:\n#           # 主库数据源\n#           master:\n#             driver-class-name: com.mysql.cj.jdbc.Driver\n#             url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n#             username: llf\n#             password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  # mqtt:\n  #   username: xiaoji                           # 账号\n  #   password: xiaoji                           # 密码\n  #   host-url: tcp://121.36.229.15:1883         # mqtt连接tcp地址\n  #   client-id: ${random.value}                 # 客户端Id，每个启动的id要不同 随机：${random.value}\n  #   default-topic: test                       # 默认主题\n  #   timeout: 100                              # 超时时间\n  #   keepalive: 100                            # 保持连接数\n\n\n# mybatis配置\nmybatis:\n  # 搜索指定包别名\n  typeAliasesPackage: com.xiaoji.device\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/device/*.xml\n\n# 日志配置\n# logging:\n#   level:\n#     com.xiaoji: debug\n#     org.springframework: warn\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 121.36.229.15\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','cc06d5d24208d19513f8037895102eef','2021-12-27 09:17:00','2021-12-27 09:17:00','nacos','111.187.26.146','U',''),(16,64,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# 数据源配置\nspring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driverClassName: com.mysql.cj.jdbc.Driver\n    master:\n      url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n      username: llf\n      password: llf123\n    \n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:1883              # mqtt连接tcp地址\n    client-id: ${random.value}                           # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n\n# spring配置\n# spring: \n#   redis:\n#     host: 121.36.229.15\n#     port: 6379\n#     password: lif314\n#   datasource:\n#     druid:\n#       stat-view-servlet:\n#         enabled: true\n#         loginUsername: admin\n#         loginPassword: 123456\n#     dynamic:\n#       druid:\n#         initial-size: 5\n#         min-idle: 5\n#         maxActive: 20\n#         maxWait: 60000\n#         timeBetweenEvictionRunsMillis: 60000\n#         minEvictableIdleTimeMillis: 300000\n#         validationQuery: SELECT 1 FROM DUAL\n#         testWhileIdle: true\n#         testOnBorrow: false\n#         testOnReturn: false\n#         poolPreparedStatements: true\n#         maxPoolPreparedStatementPerConnectionSize: 20\n#         filters: stat,slf4j\n#         connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n#       datasource:\n#           # 主库数据源\n#           master:\n#             driver-class-name: com.mysql.cj.jdbc.Driver\n#             url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n#             username: llf\n#             password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  # mqtt:\n  #   username: xiaoji                           # 账号\n  #   password: xiaoji                           # 密码\n  #   host-url: tcp://121.36.229.15:1883         # mqtt连接tcp地址\n  #   client-id: ${random.value}                 # 客户端Id，每个启动的id要不同 随机：${random.value}\n  #   default-topic: test                       # 默认主题\n  #   timeout: 100                              # 超时时间\n  #   keepalive: 100                            # 保持连接数\n\n\n# mybatis配置\nmybatis:\n  # 搜索指定包别名\n  typeAliasesPackage: com.xiaoji.device\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/device/*.xml\n\n# 日志配置\n# logging:\n#   level:\n#     com.xiaoji: debug\n#     org.springframework: warn\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 121.36.229.15\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','f1f3769ddc990725ab1fb4efa98d5970','2021-12-27 09:24:59','2021-12-27 09:24:59','nacos','111.187.26.146','U',''),(16,65,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n          #   username: \n          #   password: \n          #   url: \n          #   driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:1883         # mqtt连接tcp地址\n    client-id: ${random.value}                 # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n\n\n# mybatis配置\nmybatis:\n  # 搜索指定包别名\n  typeAliasesPackage: com.xiaoji.device\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/device/*.xml\n\n# 日志配置\n# logging:\n#   level:\n#     com.xiaoji: debug\n#     org.springframework: warn\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 121.36.229.15\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','0bac81737c4e0bb24a06a8bde13d5f2e','2021-12-27 09:34:48','2021-12-27 09:34:48','nacos','111.187.26.146','U',''),(16,66,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:1883         # mqtt连接tcp地址\n    client-id: ${random.value}                 # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n\n\n# mybatis配置\nmybatis:\n  # 搜索指定包别名\n  typeAliasesPackage: com.xiaoji.device\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/device/*.xml\n\n# 日志配置\n# logging:\n#   level:\n#     com.xiaoji: debug\n#     org.springframework: warn\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 121.36.229.15\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','15b87213ee13b3565517f123d59e861b','2021-12-28 06:14:03','2021-12-28 06:14:03','nacos','111.187.26.146','U',''),(16,67,'xiaoji-device-dev.yml','DEFAULT_GROUP','','# 项目相关配置\nxiaoji:\n  # 名称\n  name: XiaoJi\n  # 版本\n  version: 1.0.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）\n  profile: D:/ruoyi/uploadPath\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n\n# spring配置\nspring:\n  mqtt:\n    username: xiaoji                           # 账号\n    password: xiaoji                           # 密码\n    host-url: tcp://121.36.229.15:1883         # mqtt连接tcp地址\n    client-id: ${random.value}                 # 客户端Id，每个启动的id要不同 随机：${random.value}\n    default-topic: test                       # 默认主题\n    timeout: 100                              # 超时时间\n    keepalive: 100                            # 保持连接数\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: llf\n            password: llf123\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n  \n\n\n# mybatis配置\nmybatis:\n  # 搜索指定包别名\n  typeAliasesPackage: com.xiaoji.device\n  # 配置mapper的扫描，找到所有的mapper.xml映射文件\n  mapperLocations: classpath:mapper/device/*.xml\n\n# 日志配置\n# logging:\n#   level:\n#     com.xiaoji: debug\n#     org.springframework: warn\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      xiaoji-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 121.36.229.15:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 121.36.229.15:8848\n      namespace:\n\n# token配置\ntoken:\n  # 令牌自定义标识\n  header: Authorization\n  # 令牌密钥\n  secret: abcdefghijklmnopqrstuvwxyz\n  # 令牌有效期（默认30分钟，设置为1周过期）\n  expireTime: 10000\n\n\n# PageHelper分页插件\npagehelper:\n  helperDialect: mysql\n  reasonable: false\n  supportMethodsArguments: true\n  params: count=countSql\n\n# Swagger配置\nswagger:\n  # 是否开启swagger\n  enabled: true\n  # 请求前缀\n  pathMapping: /\n\n# 防止XSS攻击\nxss:\n  # 过滤开关\n  enabled: true\n  # 排除链接（多个用逗号分隔）\n  excludes: /system/notice/*\n  # 匹配链接\n  urlPatterns: /system/*,/monitor/*,/tool/*\n\n# 公众号配置(必填)\nwx:\n  miniapp:\n    appid: wxad4053c650f0a573 #  #\n    appSecret: f3d24b6a3cc16417152d76265f8b1467 # #\n    config-storage:\n      type: Memory                     # 配置类型: Memory(默认), Jedis, RedisTemplate\n      key-prefix: wa                 # 相关redis前缀配置: wa(默认)\n      redis:\n        host: 121.36.229.15\n        port: 6379\n        passowrd: lif314\n      # http客户端配置\n      http-client-type: HttpClient      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp','763560ade5ce3a2f1c8b5a6d58e67154','2021-12-28 06:37:12','2021-12-28 06:37:13','nacos','111.187.26.146','U',''),(0,68,'xiaoji-makeup-dev.yml','DEFAULT_GROUP','','Spring','38008dd81c2f4d7985ecf6e0ce8af1d1','2021-12-29 09:58:30','2021-12-29 09:58:31',NULL,'111.187.31.58','I',''),(77,69,'xiaoji-makeup-dev.yml','DEFAULT_GROUP','','Spring','38008dd81c2f4d7985ecf6e0ce8af1d1','2021-12-29 09:59:01','2021-12-29 09:59:01','nacos','111.187.31.58','U',''),(68,70,'xiaoji-authface-dev.yml','DEFAULT_GROUP','','spring:\r\n  redis:\r\n    host: 121.36.229.15\r\n    port: 6379\r\n    password: lif314','8736e8c981c7d98cf052d848c18d3d2e','2021-12-29 12:20:59','2021-12-29 12:20:59','nacos','111.187.5.86','U',''),(68,71,'xiaoji-authface-dev.yml','DEFAULT_GROUP','','# spring配置\nspring: \n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://81.68.236.154:3306/soa_device?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: llf\n    password: llf123\n  jpa:\n    show-sql: true\n    hibernate:\n      ddl-auto: update','68888cc487501de8ce20ea3047f79784','2021-12-29 12:26:59','2021-12-29 12:27:00','nacos','111.187.5.86','U',''),(2,72,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 虚拟化妆\n        - id: xiaoji-makeup\n          uri: lb://xiaoji-makeup\n          predicates:\n            - Path=/makeup/**\n          filters:\n            - StripPrefix=1\n        # 智能影院\n        - id: xiaoji-movie\n          uri: lb://xiaoji-movie\n          predicates:\n            - Path=/movie/**\n          filters:\n            - StripPrefix=1\n        # 智能理财\n        - id: xiaoji-finance\n          uri: lb://xiaoji-finance\n          predicates:\n            - Path=/finance/**\n          filters:\n            - StripPrefix=1\n        # 新闻模块\n        - id: xiaoji-news\n          uri: lb://xiaoji-news\n          predicates:\n            - Path=/news/**\n          filters:\n            - StripPrefix=1\n        # 智能天气\n        - id: xiaoji-weather\n          uri: lb://xiaoji-weather\n          predicates:\n            - Path=/weather/**\n          filters:\n            - StripPrefix=1\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /weather/**\n      - /news/**\n      - /finance/**\n      - /movie/**\n      - /makeup/**\n      - /*/v2/api-docs\n      - /csrf\n','2a26c505924d5bcdba0b7f8843696536','2021-12-29 12:40:26','2021-12-29 12:40:26','nacos','111.187.5.86','U',''),(2,73,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 移动用户认证\n        - id: xiaoji-authface\n          uri: lb://xiaoji-authface\n          predicates:\n            - Path=/authface/**\n          filters:\n            - StripPrefix=1\n        # 虚拟化妆\n        - id: xiaoji-makeup\n          uri: lb://xiaoji-makeup\n          predicates:\n            - Path=/makeup/**\n          filters:\n            - StripPrefix=1\n        # 智能影院\n        - id: xiaoji-movie\n          uri: lb://xiaoji-movie\n          predicates:\n            - Path=/movie/**\n          filters:\n            - StripPrefix=1\n        # 智能理财\n        - id: xiaoji-finance\n          uri: lb://xiaoji-finance\n          predicates:\n            - Path=/finance/**\n          filters:\n            - StripPrefix=1\n        # 新闻模块\n        - id: xiaoji-news\n          uri: lb://xiaoji-news\n          predicates:\n            - Path=/news/**\n          filters:\n            - StripPrefix=1\n        # 智能天气\n        - id: xiaoji-weather\n          uri: lb://xiaoji-weather\n          predicates:\n            - Path=/weather/**\n          filters:\n            - StripPrefix=1\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /weather/**\n      - /news/**\n      - /finance/**\n      - /movie/**\n      - /makeup/**\n      - /authface/**\n      - /*/v2/api-docs\n      - /csrf\n','81ab1b26c2e0c1de82fa837ba48279a7','2021-12-29 14:32:28','2021-12-29 14:32:28','nacos','111.187.26.146','U',''),(2,74,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      httpclient:\n        max-header-size: 65535\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 移动用户认证\n        - id: xiaoji-authface\n          uri: lb://xiaoji-authface\n          predicates:\n            - Path=/authface/**\n          filters:\n            - StripPrefix=1\n        # 虚拟化妆\n        - id: xiaoji-makeup\n          uri: lb://xiaoji-makeup\n          predicates:\n            - Path=/makeup/**\n          filters:\n            - StripPrefix=1\n        # 智能影院\n        - id: xiaoji-movie\n          uri: lb://xiaoji-movie\n          predicates:\n            - Path=/movie/**\n          filters:\n            - StripPrefix=1\n        # 智能理财\n        - id: xiaoji-finance\n          uri: lb://xiaoji-finance\n          predicates:\n            - Path=/finance/**\n          filters:\n            - StripPrefix=1\n        # 新闻模块\n        - id: xiaoji-news\n          uri: lb://xiaoji-news\n          predicates:\n            - Path=/news/**\n          filters:\n            - StripPrefix=1\n        # 智能天气\n        - id: xiaoji-weather\n          uri: lb://xiaoji-weather\n          predicates:\n            - Path=/weather/**\n          filters:\n            - StripPrefix=1\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /weather/**\n      - /news/**\n      - /finance/**\n      - /movie/**\n      - /makeup/**\n      - /authface/**\n      - /*/v2/api-docs\n      - /csrf\n','dda0c45d26a68325b7d361582d4f8400','2021-12-29 14:36:16','2021-12-29 14:36:17','nacos','111.187.26.146','U',''),(2,75,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','servicecomb:\n  rest:\n    server:\n      maxInitialLineLength: 65535\n\nspring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      httpclient:\n        max-header-size: 655350\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 移动用户认证\n        - id: xiaoji-authface\n          uri: lb://xiaoji-authface\n          predicates:\n            - Path=/authface/**\n          filters:\n            - StripPrefix=1\n        # 虚拟化妆\n        - id: xiaoji-makeup\n          uri: lb://xiaoji-makeup\n          predicates:\n            - Path=/makeup/**\n          filters:\n            - StripPrefix=1\n        # 智能影院\n        - id: xiaoji-movie\n          uri: lb://xiaoji-movie\n          predicates:\n            - Path=/movie/**\n          filters:\n            - StripPrefix=1\n        # 智能理财\n        - id: xiaoji-finance\n          uri: lb://xiaoji-finance\n          predicates:\n            - Path=/finance/**\n          filters:\n            - StripPrefix=1\n        # 新闻模块\n        - id: xiaoji-news\n          uri: lb://xiaoji-news\n          predicates:\n            - Path=/news/**\n          filters:\n            - StripPrefix=1\n        # 智能天气\n        - id: xiaoji-weather\n          uri: lb://xiaoji-weather\n          predicates:\n            - Path=/weather/**\n          filters:\n            - StripPrefix=1\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /weather/**\n      - /news/**\n      - /finance/**\n      - /movie/**\n      - /makeup/**\n      - /authface/**\n      - /*/v2/api-docs\n      - /csrf\n','176c5655559f457fcfc9d43b94fa5eec','2021-12-29 14:40:48','2021-12-29 14:40:48','nacos','111.187.26.146','U',''),(0,76,'xiaoji-scene-dev.yml','DEFAULT_GROUP','','spring:\r\n  redis:\r\n    host: 121.36.229.15\r\n    port: 6379\r\n    password: lif314','8736e8c981c7d98cf052d848c18d3d2e','2021-12-30 07:19:12','2021-12-30 07:19:12',NULL,'111.187.5.86','I',''),(2,77,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 移动用户认证\n        - id: xiaoji-authface\n          uri: lb://xiaoji-authface\n          predicates:\n            - Path=/authface/**\n          filters:\n            - StripPrefix=1\n        # 虚拟化妆\n        - id: xiaoji-makeup\n          uri: lb://xiaoji-makeup\n          predicates:\n            - Path=/makeup/**\n          filters:\n            - StripPrefix=1\n        # 智能影院\n        - id: xiaoji-movie\n          uri: lb://xiaoji-movie\n          predicates:\n            - Path=/movie/**\n          filters:\n            - StripPrefix=1\n        # 智能理财\n        - id: xiaoji-finance\n          uri: lb://xiaoji-finance\n          predicates:\n            - Path=/finance/**\n          filters:\n            - StripPrefix=1\n        # 新闻模块\n        - id: xiaoji-news\n          uri: lb://xiaoji-news\n          predicates:\n            - Path=/news/**\n          filters:\n            - StripPrefix=1\n        # 智能天气\n        - id: xiaoji-weather\n          uri: lb://xiaoji-weather\n          predicates:\n            - Path=/weather/**\n          filters:\n            - StripPrefix=1\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /weather/**\n      - /news/**\n      - /finance/**\n      - /movie/**\n      - /makeup/**\n      - /authface/**\n      - /*/v2/api-docs\n      - /csrf\n','81ab1b26c2e0c1de82fa837ba48279a7','2021-12-30 07:57:19','2021-12-30 07:57:19','nacos','111.187.5.86','U',''),(2,78,'xiaoji-gateway-dev.yml','DEFAULT_GROUP','','spring:\n  redis:\n    host: 121.36.229.15\n    port: 6379\n    password: lif314\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 移动用户认证\n        - id: xiaoji-authface\n          uri: lb://xiaoji-authface\n          predicates:\n            - Path=/authface/**\n          filters:\n            - StripPrefix=1\n        # 虚拟化妆\n        - id: xiaoji-makeup\n          uri: lb://xiaoji-makeup\n          predicates:\n            - Path=/makeup/**\n          filters:\n            - StripPrefix=1\n        # 智能影院\n        - id: xiaoji-movie\n          uri: lb://xiaoji-movie\n          predicates:\n            - Path=/movie/**\n          filters:\n            - StripPrefix=1\n        # 智能理财\n        - id: xiaoji-finance\n          uri: lb://xiaoji-finance\n          predicates:\n            - Path=/finance/**\n          filters:\n            - StripPrefix=1\n        # 新闻模块\n        - id: xiaoji-news\n          uri: lb://xiaoji-news\n          predicates:\n            - Path=/news/**\n          filters:\n            - StripPrefix=1\n        # 智能天气\n        - id: xiaoji-weather\n          uri: lb://xiaoji-weather\n          predicates:\n            - Path=/weather/**\n          filters:\n            - StripPrefix=1\n        # 设备管理\n        - id: xiaoji-device\n          uri: lb://xiaoji-device\n          predicates:\n            - Path=/device/**\n          filters:\n            - StripPrefix=1\n        # 认证中心\n        - id: xiaoji-auth\n          uri: lb://xiaoji-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: xiaoji-gen\n          uri: lb://xiaoji-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: xiaoji-job\n          uri: lb://xiaoji-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: xiaoji-system\n          uri: lb://xiaoji-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: xiaoji-file\n          uri: lb://xiaoji-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /weather/**\n      - /device/**\n      - /news/**\n      - /finance/**\n      - /movie/**\n      - /makeup/**\n      - /authface/**\n      - /*/v2/api-docs\n      - /csrf\n','3532d042c3b8c2239c78de1acac71aa1','2021-12-30 08:48:20','2021-12-30 08:48:20','nacos','111.187.5.86','U','');
/*!40000 ALTER TABLE `his_config_info` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `permissions`
--

DROP TABLE IF EXISTS `permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `permissions` (
  `role` varchar(50) NOT NULL,
  `resource` varchar(255) NOT NULL,
  `action` varchar(8) NOT NULL,
  UNIQUE KEY `uk_role_permission` (`role`,`resource`,`action`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `permissions`
--

LOCK TABLES `permissions` WRITE;
/*!40000 ALTER TABLE `permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `roles`
--

DROP TABLE IF EXISTS `roles`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `roles` (
  `username` varchar(50) NOT NULL,
  `role` varchar(50) NOT NULL,
  UNIQUE KEY `idx_user_role` (`username`,`role`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `roles`
--

LOCK TABLES `roles` WRITE;
/*!40000 ALTER TABLE `roles` DISABLE KEYS */;
INSERT INTO `roles` VALUES ('nacos','ROLE_ADMIN');
/*!40000 ALTER TABLE `roles` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tenant_capacity`
--

DROP TABLE IF EXISTS `tenant_capacity`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tenant_capacity` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int unsigned NOT NULL DEFAULT '0' COMMENT '配额，0表示使用默认值',
  `usage` int unsigned NOT NULL DEFAULT '0' COMMENT '使用量',
  `max_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int unsigned NOT NULL DEFAULT '0' COMMENT '聚合子配置最大个数',
  `max_aggr_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int unsigned NOT NULL DEFAULT '0' COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_tenant_id` (`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='租户容量信息表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tenant_capacity`
--

LOCK TABLES `tenant_capacity` WRITE;
/*!40000 ALTER TABLE `tenant_capacity` DISABLE KEYS */;
/*!40000 ALTER TABLE `tenant_capacity` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tenant_info`
--

DROP TABLE IF EXISTS `tenant_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tenant_info` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) COLLATE utf8_bin DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) COLLATE utf8_bin DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`),
  KEY `idx_tenant_id` (`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='tenant_info';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tenant_info`
--

LOCK TABLES `tenant_info` WRITE;
/*!40000 ALTER TABLE `tenant_info` DISABLE KEYS */;
/*!40000 ALTER TABLE `tenant_info` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `users` (
  `username` varchar(50) NOT NULL,
  `password` varchar(500) NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES ('nacos','$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu',1);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2022-01-03 20:28:51
